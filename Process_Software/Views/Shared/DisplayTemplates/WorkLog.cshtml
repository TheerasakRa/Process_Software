@model WorkLog
@{
    var UpdateBy = ViewBag.UpdateBy;
}
@if (Model.nextWorklog != null)
{
    <tbody class="table-secondary">
        <tr>
            <td>@Html.DisplayFor(m => m.No)</td>
            <td>
                @if (Model.WorkID == ViewBag.ID)
                {
                    @Html.DisplayFor(m => m.LogContent)
                }
                <br />
                @if (Model.UpdateDate != Model.nextWorklog.UpdateDate)
                {
                    @Html.DisplayName("Update Date: ")
                    @Html.ValueFor(m => m.nextWorklog.UpdateDate, "{0:dd/MM/yyyy hh:mm tt}")
                }

                <br />
                @if (Model.Project != Model.nextWorklog.Project)
                {
                    @Html.DisplayName("Project: ")
                    @Html.DisplayFor(m => m.Project)
                    @Html.DisplayName(" -> ")
                    @Html.DisplayFor(m => m.nextWorklog.Project)
                    <br />
                }
                @if (Model.Name != Model.nextWorklog.Name)
                {
                    @Html.DisplayName("Name: ")
                    @Html.DisplayFor(m => m.Name)
                    @Html.DisplayName(" -> ")
                    @Html.DisplayFor(m => m.nextWorklog.Name)
                    <br />
                }
                @if (Model.DueDate != Model.nextWorklog.DueDate)
                {
                    @Html.DisplayName("Due Date: ")
                    if (Model.DueDate == null)
                    {
                        @Html.DisplayName("Indefinable ")
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.DueDate)
                    }
                    @Html.DisplayName(" -> ")
                    if (Model.nextWorklog.DueDate == null)
                    {
                        @Html.DisplayName("Indefinable ")
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.nextWorklog.DueDate)
                    }
                    <br />
                }
                @if (Model.StatusID != Model.nextWorklog.StatusID)
                {
                    @Html.DisplayName("Status: ")
                    @Html.DisplayFor(m => m.Status.StatusName)
                    @Html.DisplayName(" -> ")
                    @Html.DisplayFor(m => m.nextWorklog.Status.StatusName)
                    <br />
                }


                @{
                    if (Model.ProviderLog.Where(s => s.IsDelete == false).Count() != Model.nextWorklog.ProviderLog.Where(s => s.IsDelete == false).Count())
                    {
                        @Html.DisplayName("Provider: ")

                        string oldUser = string.Join(", ", Model.ProviderLog.Where(s => s.IsDelete == false).Select(s => s.User.Name));
                        string newUser = string.Join(", ", Model.nextWorklog.ProviderLog.Where(s => s.IsDelete == false).Select(s => s.User.Name));

                        @Html.DisplayName(oldUser + " -> " + newUser)

                        <br />
                    }
                }


                @if (Model.Remark != Model.nextWorklog.Remark)
                {
                    @Html.DisplayName("Remark: ")
                    @Html.DisplayFor(m => m.Remark)
                    @Html.DisplayName(" -> ")
                    @Html.DisplayFor(m => m.nextWorklog.Remark)

                    <br />
                }
            </td>
        </tr>
    </tbody>
}